---
- name: Set same timezone on every Server
  timezone:
    name: "{{ system_timezone }}"
  when: (system_timezone is defined) and (system_timezone != "Your/Timezone")

- name: Set SELinux to disabled state
  selinux:
    state: disabled
  when: ansible_os_family == "RedHat"

- name: Set user.max_user_namespaces
  sysctl:
    name: user.max_user_namespaces
    value: "15076"
    state: present
    reload: yes
  when: ansible_os_family == "RedHat"

- name: Enable IPv4 forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: yes

- name: Enable IPv6 forwarding
  sysctl:
    name: net.ipv6.conf.all.forwarding
    value: "1"
    state: present
    reload: yes

- name: Enable IPv6 router advertisements
  sysctl:
    name: net.ipv6.conf.all.accept_ra
    value: "2"
    state: present
    reload: yes

- name: Add br_netfilter to /etc/modules-load.d/
  copy:
    content: "br_netfilter"
    dest: /etc/modules-load.d/br_netfilter.conf
    mode: "u=rw,g=,o="
  when: ansible_os_family == "RedHat"

- name: Load br_netfilter
  modprobe:
    name: br_netfilter
    state: present
  when: ansible_os_family == "RedHat"

- name: Set bridge-nf-call-iptables (just to be sure)
  sysctl:
    name: "{{ item }}"
    value: "1"
    state: present
    reload: yes
  when: ansible_os_family == "RedHat"
  loop:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables

- name: Set net.ipv4.tcp_synack_retries and net.ipv4.tcp_syn_retries
  sysctl:
    name: "{{ item }}"
    value: "2"
    state: present
    reload: yes
  loop:
    - net.ipv4.tcp_synack_retries
    - net.ipv4.tcp_syn_retries

- name: Set net.core.wmem_default and net.core.rmem_default
  sysctl:
    name: "{{ item }}"
    value: "8388608"
    state: present
    reload: yes
  loop:
    - net.core.wmem_default
    - net.core.rmem_default

- name: Set net.core.rmem_max and net.core.wmem_max
  sysctl:
    name: "{{ item }}"
    value: "16777216"
    state: present
    reload: yes
  loop:
    - net.core.rmem_max
    - net.core.wmem_max

- name: Set net.ipv4.tcp_keepalive_time
  sysctl:
    name: net.ipv4.tcp_keepalive_time
    value: "1200"
    state: present
    reload: yes

- name: Set net.ipv4.tcp_max_syn_backlog
  sysctl:
    name: net.ipv4.tcp_max_syn_backlog
    value: "8192"
    state: present
    reload: yes

- name: Set net.ipv4.tcp_max_tw_buckets
  sysctl:
    name: net.ipv4.tcp_max_tw_buckets
    value: "5000"
    state: present
    reload: yes

- name: Set net.core.netdev_max_backlog
  sysctl:
    name: net.core.netdev_max_backlog
    value: "32768"
    state: present
    reload: yes

- name: Set net.ipv4.tcp_max_orphans
  sysctl:
    name: net.ipv4.tcp_max_orphans
    value: "3276800"
    state: present
    reload: yes

- name: Set net.ipv4.tcp_fin_timeout
  sysctl:
    name: net.ipv4.tcp_fin_timeout
    value: "30"
    state: present
    reload: yes

- name: Set net.ipv4.tcp_fastopen
  sysctl:
    name: net.ipv4.tcp_fastopen
    value: "3"
    state: present
    reload: yes

- name: Add /usr/local/bin to sudo secure_path
  lineinfile:
    line: 'Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin'
    regexp: "Defaults(\\s)*secure_path(\\s)*="
    state: present
    insertafter: EOF
    path: /etc/sudoers
    validate: 'visudo -cf %s'
  when: ansible_os_family == "RedHat"

- name: Create external storage directories if it does not exist
  file:
    path: "{{ external_storage_path + item }}"
    state: directory
    mode: 0755
  loop:
    - /var/lib/rancher
    - /var/lib/kubelet
    - /var/lib/cni
    - /var/log/pods
    - /var/log/containers

- name: Create symlinks
  file:
    src: "{{ external_storage_path + item }}"
    dest: "{{ item }}"
    state: link
  loop:
    - /var/lib/rancher
    - /var/lib/kubelet
    - /var/lib/cni
    - /var/log/pods
    - /var/log/containers

- name: Create upload file directory if it does not exist
  file:
    path: /tmp/pkg
    state: directory
    mode: 0755

- name: Upload CentOS/RedHat 7 required packages
  copy:
    src: "{{ item }}"
    mode: "u=rw,g=r,o=r"
    dest: /tmp/pkg
  loop:
    - "{{ playbook_dir }}/packages/rhel7/container-selinux-2.119.2-1.911c772.el7_8.noarch.rpm"
    - "{{ playbook_dir }}/packages/rhel7/iscsi-initiator-utils-6.2.0.874-22.el7_9.x86_64.rpm"
    - "{{ playbook_dir }}/packages/rhel7/iscsi-initiator-utils-iscsiuio-6.2.0.874-22.el7_9.x86_64.rpm"
    - "{{ playbook_dir }}/packages/rhel7/k3s-selinux-1.2-2.el7.noarch.rpm"
    - "{{ playbook_dir }}/packages/rhel7/selinux-policy-3.13.1-268.el7_9.2.noarch.rpm"
    - "{{ playbook_dir }}/packages/rhel7/selinux-policy-targeted-3.13.1-268.el7_9.2.noarch.rpm"
  when: 
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version == "7"

- name: Install or update CentOS/RedHat 7 required packages
  yum:
    name:
    - "/tmp/pkg/container-selinux-2.119.2-1.911c772.el7_8.noarch.rpm"
    - "/tmp/pkg/iscsi-initiator-utils-6.2.0.874-22.el7_9.x86_64.rpm"
    - "/tmp/pkg/iscsi-initiator-utils-iscsiuio-6.2.0.874-22.el7_9.x86_64.rpm"
    - "/tmp/pkg/k3s-selinux-1.2-2.el7.noarch.rpm"
    - "/tmp/pkg/selinux-policy-3.13.1-268.el7_9.2.noarch.rpm"
    - "/tmp/pkg/selinux-policy-targeted-3.13.1-268.el7_9.2.noarch.rpm"
    state: present
  when:
    - ansible_os_family == "RedHat"
    - ansible_distribution_major_version == "7"

- name: Enable and check iscsid service for longhorn
  systemd:
    name: iscsid
    daemon_reload: yes
    state: restarted
    enabled: yes
