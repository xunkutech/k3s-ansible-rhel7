---

# - name: Create local k3s binary file directory if it does not exist
#   delegate_to: localhost
#   file:
#     path: "{{ playbook_dir }}/k3s/{{ k3s_version }}"
#     state: directory
#   when: ansible_hostname == hostvars[groups['master'][0]]['ansible_hostname']

# - name: Download k3s binary x64 to local cache
#   delegate_to: localhost
#   get_url:
#     url: https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s
#     checksum: sha256:https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/sha256sum-amd64.txt
#     dest: "{{ playbook_dir }}/k3s/{{ k3s_version }}/k3s"
#   when: ansible_hostname == hostvars[groups['master'][0]]['ansible_hostname']

- name: Upload k3s binary x64
  copy:
    src: "{{ playbook_dir }}/k3s/{{ k3s_version }}/k3s"
    dest: /usr/local/bin/k3s
    owner: root
    group: root
    mode: 0755
  when: ansible_facts.architecture == "x86_64"

- name: Create air gap images directory
  file:
    path: /var/lib/rancher/k3s/agent/images
    state: directory
    owner: root
    group: root
    mode: 0755
  when: ansible_facts.architecture == "x86_64"

- name: Upload air gap images
  copy:
    src: "{{ playbook_dir }}/k3s/{{ k3s_version }}/k3s-airgap-images-amd64.tar.gz"
    dest: /var/lib/rancher/k3s/agent/images/
    owner: root
    group: root
    mode: 0644
  when: ansible_facts.architecture == "x86_64"


- name: Upload air gap ext images
  copy:
    src: "{{ playbook_dir }}/k3s/{{ k3s_version }}/k3s-airgap-ext-images-amd64.tar.gz"
    dest: /var/lib/rancher/k3s/agent/images/
    owner: root
    group: root
    mode: 0644
  when: ansible_facts.architecture == "x86_64"

- name: Create k3s registries config file directory if it does not exist
  file:
    path: /etc/rancher/k3s
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Copy k3s registries config file
  register: k3s_registries
  template:
    src: "registries.yaml.j2"
    dest: "/etc/rancher/k3s/registries.yaml"
    owner: root
    group: root
    mode: 0644

- name: Set node password
  debug:
    msg: "{{ ansible_hostname + ' nodepassword: ' + (node_password_salt | default('') + ansible_hostname) | md5 }}"

- name: Create node password file if not exist
  lineinfile:
    path: /etc/rancher/node/password
    line: "{{ (node_password_salt | default('') + ansible_hostname) | md5 }}"
    create: yes
    mode: 0600
